{
  "title": "Quick List of my Projects",
  "subtitle": "Projects I've been working on and their status",
  "content": "## Occasionally Active:\n\n[![Donate using Liberapay](https://liberapay.com/assets/widgets/donate.svg)](https://liberapay.com/Anoraktrend/donate)\n\n### Music Folder Utilities\n\n#### [Codeberg](https://codeberg.org/anoraktrend/mfutil) [Github](https://github.com/anoraktrend/Music-Folder-Utils)\n\n![\"Screenshot of Dolphin showing a grid of album covers and artist images. The layout includes a mix of artist photos and album art, arranged in a clean, dark-themed interface. The sidebar on the left provides navigation options for artists, albums, and tracks.\"](/images/uploads/screenshot_dolphin.jpg \"Music Folder Utilities on KDE\") ![\"Screenshot of Nautilus showing a grid of album covers and artist images. The layout includes a mix of artist photos and album art, arranged in a clean, dark-themed interface. The sidebar on the left provides navigation options for artists, albums, and tracks.\"](/images/uploads/screenshot_nautilus.jpg \"Music Folder Utilities on gnome\")\n\nmy Rust-based, all-in-one music library manager for Linux desktops. I built it to automate the tedious tasks of organizing music files, syncing metadata with MusicBrainz, extracting album art, and creating smart symlinks for easy browsing in file managers like Nautilus and Dolphin. The tool organizes your library into a clean Artists/Artist/Album structure, validates and imports new music, and even finds and fixes misplaced files—all with parallel processing for speed. You can use it for everything from metadata updates to creating album and track symlinks, or just run mfutil all for a complete workflow. I’ve optimized the build process with just for much faster compilation, and added support for build caching and faster linking. For best results, set up API keys for Pexels and TheAudioDB to fetch missing artwork. The project is open source under GPLv3, and I’ve included man pages and detailed CLI subcommands for full control. Whether you’re managing a small collection or thousands of tracks, mfutil keeps your music library clean, consistent, and ready for any media player.\n\n### [E﻿E](https://github.com/anoraktrend/ee-fbsd)\n\n  EE is a terminal based editor that uses (n)curses. It's a simplified text editor that is (as of this writing) available with various free UNIX distributions (FreeBSD and Linux). I occasionally maintain this as an extraction from freebsd. Currently, this needs to be synced to freebsd's sources. If you need a version for your system, a more up to date version is included with Chimera Linux's [chimerautils](https://github.com/chimera-linux/chimerautils) and can be built using the meson build system.\n\n![A screenshot of a terminal running the EE program](/images/uploads/r.png \"EE in action\")\n\n### [AEE](https://github.com/anoraktrend/aee)\n\n  AEE is a superset of 'ee', a simplified text editor that is (as of this writing) available with various free UNIX distributions (FreeBSD and Linux). I'm working on updating the documentation and build system to use with modern linux distros like Alpine and Chimera. \n\n UPDATE 2025/09/04: AEE's build system upgrade is complete. Please feel free to send me patches/pull requests for changes to the source code. AEE builds using a cmake based build system. \n\n![A screenshot of a terminal running the AEE program](/images/uploads/aee_005.png \"AEE in action\")\n\n## Archived:\n\n### ﻿ [Kinland](https://kinland.helltop.net)\n\n![](/images/uploads/2024-11-11-08.07.02-kinland.helltop.net-3eeaeeefa124.png \"a screenshot of the website for Kinland\")\n\nK﻿inland was an unfiction project I made as a birthday and anniversary gift to my fiancée. I have it archived here for posterity.",
  "featuredImage": "/images/uploads/r.png"
}